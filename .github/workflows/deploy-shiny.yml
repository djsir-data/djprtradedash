on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
      - master

name: Update DB and deploy
jobs:
  deploy-shiny:
    runs-on: macOS-latest
    env:
      R_CONFIG_ACTIVE: github
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      PG_MASTER_USER: ${{ secrets.PG_MASTER_USER }}
      PG_MASTER_PW: ${{ secrets.PG_MASTER_PW }}
      PG_READ_OPEN_USER: ${{ secrets.PG_READ_OPEN_USER }}
      PG_READ_OPEN_PW: ${{ secrets.PG_READ_OPEN_PW }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::pkgload
            any::rsconnect
            any::BH
            any::cpp11
            any::plogr
            any::prettyunits
            any::progress

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Set AWS environment variables
        run: |
          echo "AWS_DEFAULT_REGION=ap-southeast-2" >> $GITHUB_ENV
          echo "AWS_SG_NAME=sg-0107d396b582171a1" >> $GITHUB_ENV

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_NAME }} --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Update database
        run: |
         Rscript -e "source('data-raw/create_dash_data.R')"

      - name: Generate charts
        run: |
         Rscript -e "source('data-raw/generate_static_content.R')"

      - name: Deploy  to shinyapps.io
        run: |
         Rscript -e "rsconnect::setAccountInfo(name = 'djpr-spp', token = '${{secrets.SHINYAPPS_TOKEN}}', secret = '${{secrets.SHINYAPPS_SECRET}}')"
         Rscript -e "source('data-raw/manual_deploy.R')"

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_NAME }} --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        if: always()
